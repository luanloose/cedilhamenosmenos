/* Generated By:JavaCC: Do not edit this line. CedilhaConstants.java */
package Principal;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CedilhaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int FIMIF = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int FIMWHILE = 16;
  /** RegularExpression Id. */
  int INICIOPROG = 17;
  /** RegularExpression Id. */
  int FIMPROG = 18;
  /** RegularExpression Id. */
  int INTEIRO = 19;
  /** RegularExpression Id. */
  int PALAVRA = 20;
  /** RegularExpression Id. */
  int MOSTRA = 21;
  /** RegularExpression Id. */
  int ENTRADA = 22;
  /** RegularExpression Id. */
  int CONCAT = 23;
  /** RegularExpression Id. */
  int FIMLINHA = 24;
  /** RegularExpression Id. */
  int PARENTESQ = 25;
  /** RegularExpression Id. */
  int PARENTDIR = 26;
  /** RegularExpression Id. */
  int VIRGULA = 27;
  /** RegularExpression Id. */
  int VARIAVEIS = 28;
  /** RegularExpression Id. */
  int NUMEROS = 29;
  /** RegularExpression Id. */
  int PALAVRAS = 30;
  /** RegularExpression Id. */
  int MAIS = 31;
  /** RegularExpression Id. */
  int MENOS = 32;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 33;
  /** RegularExpression Id. */
  int DIVISAO = 34;
  /** RegularExpression Id. */
  int POTENCIA = 35;
  /** RegularExpression Id. */
  int ATRIB = 36;
  /** RegularExpression Id. */
  int MAIOR = 37;
  /** RegularExpression Id. */
  int MENOR = 38;
  /** RegularExpression Id. */
  int MAIORIGUAL = 39;
  /** RegularExpression Id. */
  int MENORIGUAL = 40;
  /** RegularExpression Id. */
  int IGUAL = 41;
  /** RegularExpression Id. */
  int DIFERENTE = 42;
  /** RegularExpression Id. */
  int E = 43;
  /** RegularExpression Id. */
  int OU = 44;
  /** RegularExpression Id. */
  int NAO = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int BLOCO_COMENTARIO = 1;
  /** Lexical state. */
  int LINHA_COMENTARIO = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"_\"",
    "\"/*\"",
    "\"//\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"\\n\"",
    "<token of kind 11>",
    "\"SeNaoForIsso\"",
    "\"EhIsso\"",
    "\"FimDisso\"",
    "\"RodeAteQue\"",
    "\"Volta\"",
    "\"Inicia\"",
    "\"Termina\"",
    "\"Inteiro\"",
    "\"Palavra\"",
    "\"Mostra\"",
    "\"Entrada\"",
    "\".\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "<VARIAVEIS>",
    "<NUMEROS>",
    "<PALAVRAS>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"=>\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\"&\"",
    "\"||\"",
    "\"!\"",
  };

}
