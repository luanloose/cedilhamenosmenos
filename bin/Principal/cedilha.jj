/*  Cedilha.jj - Analisador Léxico */

options {
  DEBUG_PARSER = false;
  DEBUG_TOKEN_MANAGER = false;
}

PARSER_BEGIN(Cedilha)
package Principal;
import java.io.*;

public class Cedilha {
	public static void main(String args[])  throws ParseException  {
		try {
			Cedilha x = new Cedilha(new FileInputStream("main.ç--"));
			x.S();
		}
		catch(FileNotFoundException e) {
			System.out.println("Arquivo não encontrado");
		}
	}
}

PARSER_END(Cedilha)

SKIP : { " " | "\t" | "\r" | "\n"}

SKIP : /* Comentários */
{
	"/*" : comentario
}

<comentario> SKIP: {
   "*/" : DEFAULT
   | <~[]>
}

TOKEN: /* Regras gerais */ {
  <ATRIB: "=">
| <IF: "SeNaoForIsso" >
| <ELSE: "EhIsso" >
| <FIMIF: "FimDisso" >
| <WHILE: "RodeAteQue" >
| <FIMWHILE: "Volta" >
| <CONCAT: "." >
| <FIMLINHA: ";" >
}

TOKEN: /* Regra varáveis */ {
  < VARIAVEIS: (["a"-"z"]){3,} >
| < ARQ:    "\""
            ((~[".", ":", ";", "\\"]) {3,}
            ( "." (~[".", ":", ";", "\\"]){1,3})?)
            "\"" >
}

TOKEN : /* Tipos de varáveis */
{
  < INT:  (["0"-"9"])+ >
| < STR:  "\""(["a"-"z","A"-"Z"])*"\"" >
}


TOKEN : /* Operadores Matematicos */
{
      < MAIS: "+" >
|     < MENOS: "-" >
|     < MULTIPLICACAO: "*" >
|     < DIVISAO: "/" >
|     < POTENCIA: "^" >
}

TOKEN : /* Operadores Relacionais */
{
      < MAIOR: ">" >
|     < MENOR: "<" >
|     < MAIORIGUAL: "=>" >
|     < MENORIGUAL: "<=" >
|     < IGUAL: "==" >
|     < DIFERENTE: "!=" >
}

TOKEN : /* Operadores Lógicos */
{
      < E: "&" >
|     < OU: "||" >
|     < NAO: "!" >
}

JAVACODE void S()
{
	Token t;
	do {
		t = getNextToken();
		System.out.println(tokenImage[t.kind]+"\t"+t.image);
	}
	while(t.kind != EOF);
}